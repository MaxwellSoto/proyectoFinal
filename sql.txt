CREATE PROCEDURE CrearUsuarioNuevo  
    @IdEmpleado INT,  
    @Usuario VARCHAR(50),  
    @Contrase単a VARCHAR(50)  
AS  
BEGIN  
 DECLARE @NuevoIdUsuario INT;  
  
 SELECT @NuevoIdUsuario = (SELECT MAX(IdUsuario) FROM Usuario) + 1;  
  
    INSERT INTO Usuario (IdUsuario, IdEmpleado, Usuario, Contrase単a)  
 Values(@NuevoIdUsuario, @IdEmpleado, @Usuario, @Contrase単a);  
 SELECT @NuevoIdUsuario AS NuevoIdUsuario;  
END  

-----

CREATE PROCEDURE CrearEmpleadoNuevo  
    @IdCargo INT,  
    @DNI VARCHAR(50),  
    @Apellidos VARCHAR(255),  
    @Nombre VARCHAR(255),  
    @Sexo VARCHAR(1),  
    @Direccion VARCHAR(255),  
    @EstadoCivil VARCHAR(50)  
AS  
BEGIN  
 DECLARE @NuevoIdEmpleado INT;  
  
SELECT @NuevoIdEmpleado = (SELECT MAX(IdEmpleado) FROM Empleado) + 1;  
  
    INSERT INTO Empleado (IdEmpleado, IdCargo, DNI, Apellidos, Nombre, Sexo, Direccion, EstadoCivil)  
 VALUES (@NuevoIdEmpleado, 1, @DNI, @Apellidos, @Nombre, @Sexo, @Direccion, @EstadoCivil)  
 SELECT @NuevoIdEmpleado AS NuevoIdEmpleado;  
END

-------


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Cargo')
BEGIN
    CREATE TABLE Cargo (
        IdCargo INT PRIMARY KEY,
        Descripcion VARCHAR(255)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Empleado')
BEGIN
    CREATE TABLE Empleado (
        IdEmpleado INT PRIMARY KEY,
        IdCargo INT,
        DNI VARCHAR(50),
        Apellidos VARCHAR(255),
        Nombre VARCHAR(255),
        Sexo CHAR(1),
        Direccion VARCHAR(255),
        EstadoCivil VARCHAR(50),
        FOREIGN KEY (IdCargo) REFERENCES Cargo(IdCargo)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Cliente')
BEGIN
    CREATE TABLE Cliente (
        IdCliente INT PRIMARY KEY,
        DNI VARCHAR(50),
        Apellidos VARCHAR(255),
        Nombre VARCHAR(255),
        Direccion VARCHAR(255),
        Telefono VARCHAR(50)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Venta')
BEGIN
    CREATE TABLE Venta (
        IdVenta INT PRIMARY KEY,
        IdEmpleado INT,
        IdCliente INT,
        Serie VARCHAR(50),
        NroDocumento VARCHAR(50),
        TipoDocumento VARCHAR(50),
        FechaVenta DATE,
        Total MONEY,
        FOREIGN KEY (IdEmpleado) REFERENCES Empleado(IdEmpleado),
        FOREIGN KEY (IdCliente) REFERENCES Cliente(IdCliente)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Usuario')
BEGIN
    CREATE TABLE Usuario (
        IdUsuario INT PRIMARY KEY,
        IdEmpleado INT,
        Usuario VARCHAR(50),
        Contrase単a VARCHAR(50),
        FOREIGN KEY (IdEmpleado) REFERENCES Empleado(IdEmpleado)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Categoria')
BEGIN
    CREATE TABLE Categoria (
        IdCategoria INT PRIMARY KEY,
        Descripcion VARCHAR(255)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Producto')
BEGIN
    CREATE TABLE Producto (
        IdProducto INT PRIMARY KEY,
        IdCategoria INT,
        Nombre VARCHAR(255),
        Marca VARCHAR(255),
        Stock INT,
        PrecioCompra MONEY,
        PrecioVenta MONEY,
        FechaVencimiento DATE,
        FOREIGN KEY (IdCategoria) REFERENCES Categoria(IdCategoria)
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DetalleVenta')
BEGIN
    CREATE TABLE DetalleVenta (
        IdDetalleVenta INT PRIMARY KEY,
        IdProducto INT,
        IdVenta INT,
        Cantidad INT,
        PrecioUnitario MONEY,
        IGV MONEY,
        SubTotal MONEY,
        FOREIGN KEY (IdProducto) REFERENCES Producto(IdProducto),
        FOREIGN KEY (IdVenta) REFERENCES Venta(IdVenta)
    );
END
